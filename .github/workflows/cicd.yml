name: CI/CD

on:
  push:
    branches: [ 'master' ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}


jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs:
      image_name: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  deploy-server:
    needs: build
    runs-on: [self-hosted, X64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Make static directory
        run: mkdir -p ${{ secrets.APP_FOLDER }}/static
      - name: Make uploads directory
        run: mkdir -p ${{ secrets.APP_FOLDER }}/uploads
      - name: Copy static files
        run: |
          cp -r app/static/* \
          ${{ secrets.APP_FOLDER }}/static
      - name: Visit app folder
        run: cd ${{ secrets.APP_FOLDER }}
      - name: Force recreate
        run: docker stop feral_fotos && docker rm -f feral_fotos || true
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Debug available images
        run: |
          echo "Image from build job: ${{ needs.build.outputs.image_name }}"
      - name: Pull container
        run: docker pull ${{ needs.build.outputs.image_name }}
      - name: Start Docker container
        run: |
          docker run -d \
            --name feral_fotos \
            -p 8005:8005 \
            -v ${{ secrets.APP_FOLDER }}/uploads:/app/uploads \
            -v ${{ secrets.APP_FOLDER }}/static:/app/static \
            -e SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            -e READ_API_KEY="${{ secrets.READ_API_KEY }}" \
            -e WRITE_API_KEY="${{ secrets.WRITE_API_KEY }}" \
            ${{ needs.build.outputs.image_name }} \
            gunicorn app:app --bind 0.0.0.0:8005 

  deploy-client:
    needs: build
    runs-on: [self-hosted, ARM64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set host variable
        run: echo "FERAL_FOTOS_HOST=${{ secrets.HOSTNAME }}" | sudo tee -a /etc/environment
      - name: Set API key variable
        run: echo "API_KEY=${{ secrets.READ_API_KEY }}" | sudo tee -a /etc/environment
      - name: Make binary directory
        run: mkdir -p /usr/local/bin
      - name: Copy script
        run: sudo cp ./client.sh /usr/local/bin/feral_fotos_client.sh
      - name: Make script executable
        run: sudo chmod +x /usr/local/bin/feral_fotos_client.sh
      - name: Copy service file
        run: |
          sudo install -m 644 client.service \
          /etc/systemd/system/feral_fotos_client.service
      - name: Enable printer
        run: sudo lpoptions -d Canon_SELPHY_CP1300
      - name: Reload systemctl
        run: sudo systemctl daemon-reload 
      - name: Enable service
        run: sudo systemctl enable feral_fotos_client
      - name: Start service
        run: sudo systemctl start feral_fotos_client
